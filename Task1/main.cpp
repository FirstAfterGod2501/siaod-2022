//???? ????????? ???. ????????? ?????? ? ????????? ???: ?????
//??????????, ??????? ? ???????? ?????????, ??????, ???? ?????????,
//????? ????????? (???????), ?????? (????), ????????? (????? ??????).
//9
//????????
//1) ?????????? ?????? ? ????????? ??? ? ??????????.
//2) ???????? ?????? ? ???????, ???????????? ?????? ?? ???????? ?? ?????? ??????????.
//3) ??????? ?????? ?? ????????? ?????? ??????????.
//4) ???????????? ?????? ???????? ?? ???????????, ??????? ???????? ????? ?? ???????? ??????.

#include "traffic_violation.h"
#include <iostream>
#include <vector>
#include <algorithm>

int main(){
    int operations;
    std::vector<traffic_violation> violations;
    traffic_violation violation;
    while(true) {
        std::cout<<"1.From keyvoard\n2.insertion\n3.delete from number\n4.output\n";
        std::cin >> operations;
        switch (operations) {
            case 1: {
                violation.Add_traffic_violation(1);
                break;
            }
            case 2: {
                violations.push_back(violation);
                std::sort(violations.begin(), violations.end(),
                          [&](const traffic_violation &left, const traffic_violation &right) {
                              return left.car_number > right.car_number;
                          });

                break;
            }
            case 3: {
                std::string car_number;
                std::cin >> car_number;
                violations.erase(
                        std::find_if(violations.begin(), violations.end(), [&](const traffic_violation &violation1) {
                            return violation1.car_number == car_number;
                        }));
                break;
            }
            default: {
                std::string article;
                std::cin >> article;
                std::for_each(violations.begin(), violations.end(),
                              [&](traffic_violation violation) {
                                  if (violation.article == article) {
                                      std::cout << violation.Get_information_about_violation() << "\n";
                                  }
                              }
                );
                break;
            }
        }
    }
}
